@model GroupUp.ViewModels.CreateGroupViewModel

@{
    ViewBag.Title = "Create Group";
}

<h2>Create Group</h2>

@using (Html.BeginForm("Save", "Groups", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Title)
        @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Title)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.DetailedDescription)
        @Html.TextAreaFor(m => m.DetailedDescription, new {@class = "form-control"})
        @Html.ValidationMessageFor(m => m.DetailedDescription)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.MaxUserCapacity)
        @Html.TextBoxFor(m => m.MaxUserCapacity, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.MaxUserCapacity)
    </div>
    
    <p>
        Below, you can edit the city, country and continent of your request.
    </p>

    <p>
        You can enter "-" instead of a city name if you want all cities in that country to apply.
    </p>

    <p>
        Same rule applies for all area entries, but for an area to be "-", the area entries above it should be "-" as well.
    </p>
    <div class="form-group">
        @Html.LabelFor(m => m.City)
        @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.City)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Country)
        @Html.TextBoxFor(m => m.Country, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Country)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Continent)
        @Html.TextBoxFor(m => m.Continent, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Continent)
    </div>

    @Html.HiddenFor(m => m.GroupId)
    <button class="btn btn-primary" type="submit">Create Group</button>
}
